{"version":3,"file":"login_modal.min.js","sources":["../src/login_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/str','core/modal_factory', 'core/notification', './webcam'],\n    function($, Ajax, str, ModalFactory, Notification, Webcam) {\n        return {\n            async init (userid, successmessage, failedmessage,threshold, modelurl) {\n                // console.log(modelurl);\n                // Load the model.\n                await faceapi.nets.ssdMobilenetv1.loadFromUri(modelurl);\n\n                let desc_webcam = \"\";\n\n                let start_webcam = \"\";\n\n                let submit_attendance = \"\";\n\n                let try_again = \"\";\n\n                let cancel = \"\";\n\n                let warning = \"\";\n\n                async function getMessages() {\n                    desc_webcam = await str.get_string('desc_webcam', 'auth_sentry');\n                    start_webcam = await str.get_string('start_webcam', 'auth_sentry');\n                    submit_attendance = await str.get_string('submit_attendance', 'auth_sentry');\n                    try_again = await str.get_string('try_again', 'auth_sentry');\n                    cancel = await str.get_string('cancel', 'auth_sentry');\n                    warning = await str.get_string('warning_webcam', 'auth_sentry');\n                }\n\n                // Function to detect the face.\n                var detectface = async function (input, croppedImage){\n                    console.log(input);\n                    console.log(croppedImage);\n                    const output = await faceapi.detectAllFaces(input);\n                    detections = output[0].box;\n                    let res = extractFaceFromBox(input, detections, croppedImage);\n                    return res;\n                }\n\n                // Function to draw image from the box data.\n                async function extractFaceFromBox(imageRef, box, croppedImage) {\n                    const regionsToExtract = [\n                        new faceapi.Rect(box.x, box.y, box.width, box.height)\n                    ];\n                    let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\n\n                    if (faceImages.length === 0) {\n                        console.log(\"No face found\");\n                    } else {\n\n                        faceImages.forEach((cnv) => {\n                            croppedImage.src = cnv.toDataURL();\n                        });\n\n                        return croppedImage.src;\n                    }\n                }\n\n                $(\".action-modal\").on(\"click\", function () {\n                    let st_img_url = \"\";\n                    let username =  $('#username').val();\n                    console.log(username);\n                    // let course_id = $(this).attr(\"id\");\n\n                    // ajax call\n                    let wsfunction = \"auth_sentry_by_face_image_api\";\n                    let params = {\n                        username: username,\n                    };\n                    let request = {\n                        methodname: wsfunction,\n                        args: params,\n                    };\n\n                    Ajax.call([request], true, false)[0]\n                        .done(function (value) {\n                            st_img_url = value[\"image_url\"];\n                            // course_name = value[\"course_name\"];\n                            getMessages().then(() => {\n                                console.log(\"Modal Messages are printed\");\n                                create_modal();\n                            });\n                        })\n                        .fail(Notification.exception);\n                    // end of ajax call\n\n                    let create_modal = () => {\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: str.get_string('title_webcam', 'auth_sentry'),\n                            body: `\n                          <div>\n                          <p id='desc_webcam'> ` + desc_webcam + `\n                          </p><p> ` + warning + ` </p>\n                          </div>\n                          <video id=\"webcam\" autoplay playsinline width=\"300\" height=\"225\" style=\"display:none;margin:auto\"></video>\n                          <canvas id=\"canvas\" class=\"d-none\" style=\"display:none;\"></canvas>\n                          <img id=\"st-image\" style=\"display: none;\"/>\n                          <img id=\"st-image-cropped\" style=\"display: none;\"/>\n                          <img id=\"webcam-image\" style=\"display: none;\"/>\n                          <img id=\"webcam-image-cropped\" style=\"display: none;\"/>\n                          <div style=\"display: flex; flex-wrap: wrap; align-items: center; justify-content: center; padding: 0.75rem;\">\n                            <button id='start-webcam' class=\"btn btn-primary\"> ` + start_webcam +  `</button>\n                            <button id=\"submit-attendance\" style=\"display:none;\" class=\"btn btn-primary\"> ` + submit_attendance + `</button>\n                            <button id=\"try-again\" style=\"display:none;\" class=\"btn btn-primary\"> ` + try_again + ` </button>\n                            <button id='stop-webcam' class=\"btn btn-secondary\" style=\"margin-left:5px;\"> ` + cancel + ` </button>\n                          </div>\n                          <div id=\"message\"></div>`,\n                        }).then(function (modal) {\n                            modal.show();\n                            $(\".modal-footer\").hide();\n                            const webcamElement = document.getElementById(\"webcam\");\n                            const canvasElement = document.getElementById(\"canvas\");\n                            let studentimg = document.getElementById(\"st-image\");\n                            studentimg.src = st_img_url;\n                            let st_img = \"\";\n\n                            let webcam = new Webcam(webcamElement, \"user\", canvasElement);\n\n                            $(\".close\").on(\"click\", function () {\n                                webcam.stop();\n                                window.location.href = $(location).attr(\"href\");\n                            });\n\n                            let getDataUrl = (studentimg) => {\n                                const canvas = document.createElement(\"canvas\");\n                                const ctx = canvas.getContext(\"2d\");\n                                // Set width and height\n                                canvas.width = studentimg.width;\n                                canvas.height = studentimg.height;\n                                // Draw the image\n                                ctx.drawImage(studentimg, 0, 0);\n                                return canvas.toDataURL(\"image/png\");\n                            };\n                            let displaySubmitAttendance = () => {\n                                document.getElementById(\"submit-attendance\").style.display = \"block\";\n                            };\n                            let hideSubmitAttendance = () => {\n                                document.getElementById(\"submit-attendance\").style.display = \"none\";\n                            };\n                            let displayTryAgain = () => {\n                                document.getElementById(\"try-again\").style.display = \"block\";\n                                console.log(\"TRY AGAIN\");\n                            };\n                            let hideTryAgain = () => {\n                                document.getElementById(\"try-again\").style.display = \"none\";\n                            };\n                            let removeMessages = () => {\n                                const message = document.getElementById(\"message\");\n                                while (message.hasChildNodes()) {\n                                    message.removeChild(message.firstChild);\n                                }\n                            };\n                            let displaySuccessMessage = () => {\n                                hideSubmitAttendance();\n                                displayMessage(successmessage, 1);\n                            };\n                            let displayFailedMessage = () => {\n                                hideSubmitAttendance();\n                                displayTryAgain();\n                                displayMessage(failedmessage, 0);\n                            };\n                            let displayMessage = (message, flag) => {\n                                var spn = document.createElement(\"span\");\n                                spn.textContent = message + \".\";\n                                spn.setAttribute(\"class\", flag ? \"text-success\" : \"text-danger\");\n                                document.getElementById(\"message\").appendChild(spn);\n                            };\n                            // let logAttendance = (sessionId) => {\n                            //     let wsfunction =\n                            //         \"block_attendance_by_face_update_db\";\n                            //     let params = {\n                            //         courseid: course_id,\n                            //         studentid: studentid,\n                            //         sessionid: sessionId,\n                            //     };\n                            //     let request = {\n                            //         methodname: wsfunction,\n                            //         args: params,\n                            //     };\n                            //\n                            //     Ajax.call([request])[0]\n                            //         .done(function () {\n                            //             window.console.log(\"Attendance logged\");\n                            //         })\n                            //         .fail(Notification.exception);\n                            // };\n                            let submitAttendance = (st_img, image) => {\n                                let wsfunction = \"auth_sentry_by_face_recognition_api\";\n                                let params = {\n                                    studentimg: st_img,\n                                    webcampicture: image,\n                                };\n                                let request = {\n                                    methodname: wsfunction,\n                                    args: params,\n                                };\n\n                                Ajax.call([request], true, false)[0]\n                                    .done(function (value) {\n                                        let original_img_response = value[\"original_img_response\"];\n                                        //window.console.log(original_img_response);\n                                        let face_img_response = value[\"face_img_response\"];\n                                        //window.console.log(face_img_response);\n                                        let distance = value[\"distance\"];\n                                        window.console.log(distance);\n\n                                        if (distance != null && distance < threshold) {\n                                            let today = new Date();\n                                            webcam.stop();\n                                            displaySuccessMessage();\n                                            // logAttendance(sessionId);\n\n                                            Notification.confirm(\n                                                successmessage,\n                                                `\n                                                 Date: ${today.toLocaleDateString(\"en-UK\")}<br>\n                        `,\n                                                \"Continue\", // Confirm.\n                                                \"Cancel\", // Cancel.\n                                                () => (window.location.href = $(location).attr(\"href\")),\n                                                () => (window.location.href = $(location).attr(\"href\"))\n                                            );\n\n                                            window.location.href = M.cfg.wwwroot + \"/my/\";\n                                        } else {\n                                            displayFailedMessage();\n                                        }\n                                    })\n                                    .fail(function (err) {\n                                        window.console.log(err);\n                                    });\n                                // end of ajax call\n                            };\n                            // let getRequestForCheckingActiveWindowAPI = (course_id) => {\n                            //   let wsfunction =\n                            //     \"block_face_recognition_student_attendance_check_active_window\";\n                            //   let params = {\n                            //     courseid: course_id\n                            //   };\n                            //   let request = {\n                            //     methodname: wsfunction,\n                            //     args: params,\n                            //   };\n                            //   return request;\n                            // }\n                            $(\"#start-webcam\").on(\"click\", function () {\n                                console.log(username);\n                                webcamElement.style.display = \"block\";\n                                canvasElement.style.display = \"block\";\n                                $(\"#start-webcam\").hide();\n                                webcam\n                                    .start()\n                                    .then((result) => {\n                                        displaySubmitAttendance();\n\n                                        $(\"#submit-attendance\").on(\"click\", function () {\n                                            removeMessages();\n\n                                            document.getElementById('submit-attendance').disabled = true;\n                                            document.getElementById('submit-attendance').innerText = \"\";\n                                            document.getElementById('submit-attendance').innerHTML = \"<div id='spinner' class='spinner-border spinner-border-sm' role='status'></div>\";\n\n                                            if (!st_img) {\n                                                st_img = getDataUrl(studentimg);\n                                            }\n                                            console.log(st_img);\n                                            let image = webcam.snap();\n                                            let webcamimg = document.getElementById(\"webcam-image\");\n                                            let webcamimgcrop = document.getElementById(\"webcam-image-cropped\");\n                                            let studentimgcrop = document.getElementById(\"st-image-cropped\");\n                                            webcamimg.src = image;\n                                            async function a () {\n                                                st_img = await detectface(webcamimg, webcamimgcrop);\n                                                image = await detectface(studentimg, studentimgcrop);\n                                            };\n                                            a().then(() => {\n                                                //let request = getRequestForCheckingActiveWindowAPI(course_id);\n                                                submitAttendance(st_img, image);\n                                            });\n                                        });\n                                        $(\"#try-again\").on(\"click\", function () {\n                                            window.location.href = $(location).attr(\"href\");\n                                        });\n                                    })\n                                    .catch((err) => {\n                                        window.console.log(err);\n                                    });\n                            });\n                            $(\"#stop-webcam\").on(\"click\", function () {\n                                webcam.stop();\n                                window.location.href = $(location).attr(\"href\");\n                            });\n                        });\n                    };\n                });\n            }\n        };\n    }\n);"],"names":["define","$","Ajax","str","ModalFactory","Notification","Webcam","userid","successmessage","failedmessage","threshold","modelurl","faceapi","nets","ssdMobilenetv1","loadFromUri","desc_webcam","start_webcam","submit_attendance","try_again","cancel","warning","detectface","async","input","croppedImage","console","log","output","detectAllFaces","detections","box","res","imageRef","regionsToExtract","Rect","x","y","width","height","faceImages","extractFaces","length","forEach","cnv","src","toDataURL","extractFaceFromBox","on","st_img_url","username","val","request","methodname","args","call","done","value","get_string","getMessages","then","create_modal","fail","exception","create","type","types","SAVE_CANCEL","title","body","modal","show","hide","webcamElement","document","getElementById","canvasElement","studentimg","st_img","webcam","stop","window","location","href","attr","hideSubmitAttendance","style","display","displayFailedMessage","displayMessage","message","flag","spn","createElement","textContent","setAttribute","appendChild","submitAttendance","image","webcampicture","distance","today","Date","confirm","toLocaleDateString","M","cfg","wwwroot","err","start","result","hasChildNodes","removeChild","firstChild","removeMessages","disabled","innerText","innerHTML","canvas","ctx","getContext","drawImage","getDataUrl","snap","webcamimg","webcamimgcrop","studentimgcrop","a","catch"],"mappings":"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"}